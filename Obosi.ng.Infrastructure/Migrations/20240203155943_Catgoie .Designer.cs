// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obosi.ng.Data;

#nullable disable

namespace Obosi.ng.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240203155943_Catgoie ")]
    partial class Catgoie
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogsId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogsId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs_Comment");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Updates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogsId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs_Update");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Builders_Boulevard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Builders_Boulevard");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Calender_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Calender_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Politics"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Business & Economy"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Security & Defense"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Infrastructure"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Environment"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Science & Technology"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Travel & Tourism"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            Name = "Diaspora"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Executive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserId");

                    b.ToTable("Executive");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.ImeNne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("ImeNne");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Member_Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UsersId");

                    b.ToTable("Member_Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("News_Comment");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Updates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("News_Update");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Picture_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AssetUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Picture_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Reasons_For_Suspension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Reasons_For_Suspension");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackGroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanHaveMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedsConfirmation")
                        .HasColumnType("bit");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Unit");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2520),
                            Name = "Umuota",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2524),
                            Name = "Mmakwum",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2526),
                            Name = "Uruowulu",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2528),
                            Name = "Ugamuma",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2529),
                            Name = "Ire",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2531),
                            Name = "Lagos",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 7,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2533),
                            Name = "Abuja",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 8,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2535),
                            Name = "Port Harcourt",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 9,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2536),
                            Name = "Aba",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 10,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2538),
                            Name = "Abakaliki",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 11,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2540),
                            Name = "Awka",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 12,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2542),
                            Name = "Benin City",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 13,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2544),
                            Name = "Enugu",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 14,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2546),
                            Name = "Jos",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2548),
                            Name = "Kaduna",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 16,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2549),
                            Name = "Makurdi",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 17,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2551),
                            Name = "Nnewi",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 18,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2553),
                            Name = "Suleja",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 19,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2555),
                            Name = "Warri",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 20,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2556),
                            Name = "Umuota",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 21,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2558),
                            Name = "Mmakwum",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 22,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2560),
                            Name = "Uruowulu",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 23,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2562),
                            Name = "Ugamuma",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 24,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2563),
                            Name = "Ire",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 25,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2565),
                            Name = "OWA UK",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 26,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2567),
                            Name = "ODA USA",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 27,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2568),
                            Name = "ODU South Africa",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 28,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2570),
                            Name = "ODU Brazil",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 29,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2572),
                            Name = "ODU Kuwait",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Unit_Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Village"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Suburb"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Palace"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Obosi development union (ODU)"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "ODU chapter"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "ODU committee"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Umunna"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Age Grade"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Masquerade"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Monument"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Dance Group"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Resource"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("ImeNneId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("ImeNneId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2024, 2, 3, 16, 59, 43, 538, DateTimeKind.Local).AddTicks(2415),
                            Email = "Admin@obosi.ng",
                            FirstName = "",
                            GenderId = 1,
                            IsActive = true,
                            IsSuspended = false,
                            LastName = "",
                            Password = "1234567",
                            PhoneNumber = "070",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Video_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AssetUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Video_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Comment", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Blogs", "Blogs")
                        .WithMany()
                        .HasForeignKey("BlogsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Update", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Blogs", "Blogs")
                        .WithMany()
                        .HasForeignKey("BlogsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Calender_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Executive", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.ImeNne", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Member_Unit", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Comment", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Update", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Picture_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Reasons_For_Suspension", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit_Type", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Users", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.ImeNne", "ImeNne")
                        .WithMany()
                        .HasForeignKey("ImeNneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Obosi.ng.Domain.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("ImeNne");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Video_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
