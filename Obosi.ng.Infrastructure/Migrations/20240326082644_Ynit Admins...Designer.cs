// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obosi.ng.Data;

#nullable disable

namespace Obosi.ng.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240326082644_Ynit Admins..")]
    partial class YnitAdmins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obosi.ng.Domain.Entity.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("About");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogsId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogsId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs_Comment");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Updates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogsId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs_Update");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Builders_Boulevard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Builders_Boulevard");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Calender_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Calender_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Culture and Traditions"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Community Events and News"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Historical Insights"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Local Business Spotlights"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Tourism"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Health and Wellness"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Art and Creativity"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Food and nutrition"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Community Initiatives"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Politics"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Government Initiatives"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            Name = "Science and Technology"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            Name = "Jobs"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            Name = "Love, life, and family"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            Name = "Sports and youth development"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Executive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserId");

                    b.ToTable("Executive");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Member_Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UsersId");

                    b.ToTable("Member_Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuGroupId");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "Index",
                            Active = true,
                            Controller = "User",
                            DisplayName = "Users",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Index",
                            Active = true,
                            Controller = "Unit",
                            DisplayName = "Unit Management",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "Index",
                            Active = true,
                            Controller = "Blog",
                            DisplayName = "Blog Management",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "Index",
                            Active = true,
                            Controller = "News",
                            DisplayName = "News Management",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "UnApproveUsers",
                            Active = true,
                            Controller = "User",
                            DisplayName = "Approve Users",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "BoulevardList",
                            Active = true,
                            Controller = "Boulevard",
                            DisplayName = "Builders Boulevard",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "index",
                            Active = true,
                            Controller = "Calender",
                            DisplayName = "Calendar",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "index",
                            Active = true,
                            Controller = "PictureAsset",
                            DisplayName = "Picture Assets",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "index",
                            Active = true,
                            Controller = "VideoAssets",
                            DisplayName = "Video Assets",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "index",
                            Active = true,
                            Controller = "Executive",
                            DisplayName = "Executives",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 11,
                            ActionName = "Index",
                            Active = true,
                            Controller = "About",
                            DisplayName = "About",
                            MenuGroupId = 1
                        },
                        new
                        {
                            Id = 12,
                            ActionName = "Index",
                            Active = true,
                            Controller = "Menu",
                            DisplayName = "Setup Menu",
                            MenuGroupId = 1
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.MenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "MG_Users"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.MenuInRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuInRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            MenuId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            MenuId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            MenuId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            MenuId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            MenuId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            MenuId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 12,
                            MenuId = 12,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("News_Comment");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Updates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("News_Update");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Personality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortFolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Personality");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Picture_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AssetUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Picture_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Reasons_For_Suspension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Reasons_For_Suspension");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackGroundImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanHaveMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedsConfirmation")
                        .HasColumnType("bit");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Unit");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5401),
                            Name = "Umuota",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5405),
                            Name = "Mmakwum",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5407),
                            Name = "Uruowulu",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5427),
                            Name = "Ugamuma",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5429),
                            Name = "Ire",
                            NeedsConfirmation = false,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5431),
                            Name = "Lagos",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 7,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5433),
                            Name = "Abuja",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 8,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5435),
                            Name = "Port Harcourt",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 9,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5437),
                            Name = "Aba",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 10,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5439),
                            Name = "Abakaliki",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 11,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5441),
                            Name = "Awka",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 12,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5443),
                            Name = "Benin City",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 13,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5447),
                            Name = "Enugu",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 14,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5449),
                            Name = "Jos",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5451),
                            Name = "Kaduna",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 16,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5453),
                            Name = "Makurdi",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 17,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5455),
                            Name = "Nnewi",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 18,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5456),
                            Name = "Suleja",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 19,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5458),
                            Name = "Warri",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 20,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5460),
                            Name = "Umuota",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 21,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5462),
                            Name = "Mmakwum",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 22,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5464),
                            Name = "Uruowulu",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 23,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5466),
                            Name = "Ugamuma",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 24,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5468),
                            Name = "Ire",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 25,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5469),
                            Name = "OWA UK",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 26,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5473),
                            Name = "ODA USA",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 27,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5474),
                            Name = "ODU South Africa",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 28,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5476),
                            Name = "ODU Brazil",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        },
                        new
                        {
                            Id = 29,
                            About = "",
                            BackGroundImageUrl = "",
                            CanHaveMembers = false,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5478),
                            Name = "ODU Kuwait",
                            NeedsConfirmation = false,
                            UnitTypeId = 5
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.UnitAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<int>("UnitId1")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitId1");

                    b.HasIndex("UsersId");

                    b.ToTable("UnitAdmin");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Unit_Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Village"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Suburb"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Palace"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Obosi development union (ODU)"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "ODU chapter"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "ODU committee"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Umunna"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Age Grade"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Masquerade"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Monument"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Dance Group"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Resource"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Ime Nne"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            Name = "Aka"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            Name = "Personalities"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            Name = "Igwes Cabinent"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            Name = "Schools"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            Name = "Hotels"
                        },
                        new
                        {
                            Id = 19,
                            IsActive = true,
                            Name = "Churches"
                        },
                        new
                        {
                            Id = 20,
                            IsActive = true,
                            Name = "Ito-Ogbo"
                        },
                        new
                        {
                            Id = 21,
                            IsActive = true,
                            Name = "New Yam Festival"
                        },
                        new
                        {
                            Id = 22,
                            IsActive = true,
                            Name = "Festivals"
                        },
                        new
                        {
                            Id = 23,
                            IsActive = true,
                            Name = "Landmarks"
                        },
                        new
                        {
                            Id = 24,
                            IsActive = true,
                            Name = "Services And Resources"
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2024, 3, 26, 9, 26, 43, 665, DateTimeKind.Local).AddTicks(5260),
                            Email = "Admin@obosi.ng",
                            FirstName = "",
                            GenderId = 1,
                            IsActive = true,
                            IsSuspended = false,
                            LastName = "",
                            Password = "1234567",
                            PhoneNumber = "070",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Video_Assets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AssetUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Video_Assets");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Comment", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Blogs", "Blogs")
                        .WithMany()
                        .HasForeignKey("BlogsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Blogs_Update", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Blogs", "Blogs")
                        .WithMany()
                        .HasForeignKey("BlogsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Calender_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Executive", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Member_Unit", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Menu", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.MenuGroup", "MenuGroup")
                        .WithMany()
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuGroup");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.MenuInRole", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Comment", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.News_Update", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Personality", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Picture_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Reasons_For_Suspension", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Unit", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit_Type", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.UnitAdmin", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Users", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Obosi.ng.Domain.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Obosi.ng.Domain.Entity.Video_Assets", b =>
                {
                    b.HasOne("Obosi.ng.Domain.Entity.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
